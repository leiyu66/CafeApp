<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="/mnt/c/Users/leiyu/CafeApp/tests/CafeApp.Core.Tests.dll" total="32" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2016-12-08" time="22:19:32">
  <environment nunit-version="2.6.4.14350" clr-version="4.0.30319.42000" os-version="Unix 4.4.0.43" platform="Unix" cwd="/mnt/c/Users/leiyu/CafeApp" machine-name="MININT-LEIYU-X1" user="leiyu" user-domain="MININT-LEIYU-X1" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Assembly" name="/mnt/c/Users/leiyu/CafeApp/tests/CafeApp.Core.Tests.dll" executed="True" result="Success" success="True" time="0.275" asserts="0">
    <results>
      <test-suite type="TestFixture" name="CloseTabTests" executed="True" result="Success" success="True" time="0.193" asserts="0">
        <results>
          <test-case name="CloseTabTests.Can close the tab by paying full amount" executed="True" result="Success" success="True" time="0.182" asserts="2" />
          <test-case name="CloseTabTests.Can not close a tab with invalid payment amount" executed="True" result="Success" success="True" time="0.003" asserts="1" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="OpenTabTests" executed="True" result="Success" success="True" time="0.007" asserts="0">
        <results>
          <test-case name="OpenTabTests.Can Open a new Tab" executed="True" result="Success" success="True" time="0.001" asserts="2" />
          <test-case name="OpenTabTests.Cannot open an already Opened tab" executed="True" result="Success" success="True" time="0.001" asserts="1" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="PlaceOrderTests" executed="True" result="Success" success="True" time="0.006" asserts="0">
        <results>
          <test-case name="PlaceOrderTests.Can not place empty order" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="PlaceOrderTests.Can not place order multiple times" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="PlaceOrderTests.Can not place order with a closed tab" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="PlaceOrderTests.Can place only drinks order" executed="True" result="Success" success="True" time="0.002" asserts="2" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="PrepareFoodTests" executed="True" result="Success" success="True" time="0.016" asserts="0">
        <results>
          <test-case name="PrepareFoodTests.Can not prepare a food for served order" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="PrepareFoodTests.Can not prepare a non-ordered food" executed="True" result="Success" success="True" time="0.002" asserts="1" />
          <test-case name="PrepareFoodTests.Can not prepare already prepared food during order in progress" executed="True" result="Success" success="True" time="0.002" asserts="1" />
          <test-case name="PrepareFoodTests.Can not prepare non-ordered food during order in progress" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="PrepareFoodTests.Can not prepare with closed tab" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="PrepareFoodTests.Can Prepare Food" executed="True" result="Success" success="True" time="0.002" asserts="2" />
          <test-case name="PrepareFoodTests.Can prepare food during order in progress" executed="True" result="Success" success="True" time="0.001" asserts="2" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="ServeDrinkTests" executed="True" result="Success" success="True" time="0.021" asserts="0">
        <results>
          <test-case name="ServeDrinkTests.Can not serve an already served drinks" executed="True" result="Success" success="True" time="0.004" asserts="1" />
          <test-case name="ServeDrinkTests.Can not serve drink for already served order" executed="True" result="Success" success="True" time="0.000" asserts="1" />
          <test-case name="ServeDrinkTests.Can not serve drinks for non placed order" executed="True" result="Success" success="True" time="0.000" asserts="1" />
          <test-case name="ServeDrinkTests.Can not serve non ordered drink" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeDrinkTests.Can not serve non ordered drinks during order in progress " executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeDrinkTests.Can not serve with closed tab" executed="True" result="Success" success="True" time="0.000" asserts="1" />
          <test-case name="ServeDrinkTests.Can Serve Drink" executed="True" result="Success" success="True" time="0.001" asserts="2" />
          <test-case name="ServeDrinkTests.Can serve drink for order containing only one drink" executed="True" result="Success" success="True" time="0.001" asserts="2" />
          <test-case name="ServeDrinkTests.Remain in order in progress while serving drink" executed="True" result="Success" success="True" time="0.007" asserts="2" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="ServeFoodTests" executed="True" result="Success" success="True" time="0.017" asserts="0">
        <results>
          <test-case name="ServeFoodTests.Can maintain the order in progress state by serving food" executed="True" result="Success" success="True" time="0.005" asserts="2" />
          <test-case name="ServeFoodTests.Can not serve already served food" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeFoodTests.Can not serve for already served order" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeFoodTests.Can not serve for non placed order" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeFoodTests.Can not serve for placed order" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeFoodTests.Can not serve non-ordered food" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeFoodTests.Can not serve with closed tab" executed="True" result="Success" success="True" time="0.001" asserts="1" />
          <test-case name="ServeFoodTests.Can serve only prepared food" executed="True" result="Success" success="True" time="0.001" asserts="1" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>